var config = {
	"layers": {
	"basemap": {"service": "http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer", 
				"title": "Street Map",
				"id": "esriStreetMap"},
		"dynamicLayers": [{
				"service": "http://server.arcgisonline.com/ArcGIS/rest/services/Demographics/USA_Median_Age/MapServer",
				"title": "Median Age",
				"id": "MedianAge",
				"visible":true,
				},{
				"service": "http://server.arcgisonline.com/ArcGIS/rest/services/Demographics/USA_Average_Household_Size/MapServer",
				"title": "Average Household Size",
				"id": "AvgHHSize",
				"visible":false,
				}]
	},	
	"extent": {"xmin": -135.46, "ymin": 37.73, "xmax": -67.36, "ymax": 37.77, "spatialReference": {"wkid": 4326}},
	"utilities": {
		"geocoder": {
			"url": "http://tasks.arcgisonline.com/ArcGIS/rest/services/Locators/TA_Address_NA_10/GeocodeServer/findAddressCandidates",
			"symbology": {
				"symbol": esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,
				"color": [0,0,255,0.75],
			},
		},
		"query":{
			"url": "http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer/",
			"layers":[
				{"title": "National", "id":0, "fields":[]},
				{"title": "Congressional", "id":1, "fields":[]},
				{"title": "State", "id":2, "fields":[]},
				{"title": "County", "id":3, "fields":[]},

			]
		},
		"geometry":{
			"url": "http://tasks.arcgisonline.com/ArcGIS/rest/services/Geometry/GeometryServer/project",
		}
	},
	"sunlight": {
		"url": "http://services.sunlightlabs.com/api/",
		"apikey": "357f86221c7349f89afce32088594644",
		"tools": {
			"legFromLatLng": "legislators.allForLatLong.json",
		},
	}		
};

function getValue(object, value, template){
	try{
		if(template.length && object[value].length){
			return template.replace('{' + value + '}', object[value]);
		}
		else if(object[value]){
			return object[value];
		}
		else{
		return ""
		}
	}
	catch(err){
		return " "
	}
}

function statisticsModel(statFeature){
	var info = {
		"projected":{
			"5 - 17":"AGE_5-17",
			"18 - 21":"AGE_18_21",
			"22 - 29":"AGE_22-29",
			"30 - 39":"AGE_30-39",
			"40 - 49":"AGE_40-49",
			"50 - 64":"AGE_50-64",
			"65+":"AGE_65_UP",
		}
	}
}

function table(id, title, data){
	var text = [];
	text = text.concat(['<table class="officialTable" id="', title.replace(" ","_"), "_", id, '">']);
	text = text.concat(["<th class='title', colspan=2>", title, "</th>"]);
	console.log(data);
	for (var field in data){
		if (data[field]){
			text = text.concat(["<tr><th class='key'>", field, ":</th><td class='value'>", data[field], "</td></tr>"]);
		}
	}
	text = text.concat("</table>");
	return text.join("")
}
function chart(id, title, data, type){
	console.log(data);
	var chart = new Chart("chartNode");
	chart.addPlot("defualt", {
		type: type,
		fontColor:"white",
		majorLabels:true,
	})
	chart.addSeries(title, data);
	chart.addAxis("x", data);
	chart.render();
}

function officialModel(official){
	//console.log(official);
	var info = {
		"General":{
			"ID":			getValue(official,'bioguide_id',''),
			"Full Name":	[getValue(official, 'title', ''), getValue(official, 'firstname', ''), getValue(official, 'lastname', '')].join(" "),
			"Full Title": 	[getValue(official, 'title', ''), getValue(official, 'firstname', ''), getValue(official, 'lastname', ''), "(" + getValue(official, 'party', '') + ")"].join(" "),
		},
		"Legislator Info":{
			"State": 		getValue(official, 'state',''),
			"District": 	getValue(official, 'district',''),
			"Email": 		getValue(official, 'email',''),
			"Senate Class": getValue(official, 'senate_class',''),
		},
		"Contact Info":{
			"Phone": 		getValue(official, 'phone',''),
			"Fax": 			getValue(official, 'fax',''),
			"Address": 		getValue(official, 'congress_office'),
			"Email": 		getValue(official, 'email', '<a href="mailto:{email}">Email Link</a>'),
			"Web Address": 	getValue(official, 'website', '<a href="{website}">Website Link</a>'),
			"Congresspedia": getValue(official, 'congresspedia_url', '<a href="{congresspedia_url}">Congresspedia Link</a>'),
		},
		"Social Media Info":{
			"Twitter": 		getValue(official, 'twitter_id', '<a href="http://twitter.com/#!/{twitter_id}">Twitter Link</a>'),
			"YouTube":		getValue(official, 'youtube_url', '<a href="{youtube_url}">Youtube Link</a>'),
			"Facebook":		getValue(official, 'facebook_id', '<a href="http://facebook.com/{facebook_id}">Facebook Link</a>'),
			"RSS Feed":		getValue(official, 'official_rss', '<a href="{official_rss}">RSS Link</a>'),
			"Eventful":		getValue(official, 'eventful_id', '<a href="http://eventful.com/{eventful_id}">Eventful Link</a>'),
		}	
	};
	return info;
}
function officialView(info){
	var text = "";
	for (var section in info){
		if (!(section == 'General')){
			text = text + table(info["General"]["ID"], section, info[section]);
		}
	}
	return text;
}


function statisticsView(info){
	var text = "";
	dojo.forEach(info.features, function(feature){
		console.log(feature.attributes);
		text = text + table('asdf', feature.attributes)
	});
}
